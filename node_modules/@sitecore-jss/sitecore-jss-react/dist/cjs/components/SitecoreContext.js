"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SitecoreContext = exports.ComponentFactoryReactContext = exports.SitecoreContextReactContext = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
const react_1 = __importDefault(require("react"));
const prop_types_1 = __importDefault(require("prop-types"));
const deep_equal_1 = __importDefault(require("deep-equal"));
exports.SitecoreContextReactContext = react_1.default.createContext({});
exports.ComponentFactoryReactContext = react_1.default.createContext({});
class SitecoreContext extends react_1.default.Component {
    constructor(props) {
        super(props);
        this.setContext = (value) => {
            if (deep_equal_1.default(value, this.state.context))
                return;
            this.setState({
                context: value,
            });
        };
        let context = {
            pageEditing: false,
        };
        if (props.context) {
            context = props.context;
        }
        if (props.context === null) {
            context = null;
        }
        this.state = {
            context,
            setContext: this.setContext,
        };
    }
    componentDidUpdate(prevProps) {
        if (!deep_equal_1.default(prevProps.context, this.props.context)) {
            this.setState({
                context: this.props.context,
            });
            return;
        }
    }
    render() {
        return (react_1.default.createElement(exports.ComponentFactoryReactContext.Provider, { value: this.props.componentFactory },
            react_1.default.createElement(exports.SitecoreContextReactContext.Provider, { value: this.state }, this.props.children)));
    }
}
exports.SitecoreContext = SitecoreContext;
SitecoreContext.propTypes = {
    children: prop_types_1.default.any.isRequired,
    componentFactory: prop_types_1.default.func,
    context: prop_types_1.default.any,
};
SitecoreContext.displayName = 'SitecoreContext';
